version: "3"

services:
  pihole:
    image: pihole/pihole:2023.03.1
    container_name: pihole
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    environment:
      DNSMASQ_LISTENING: all
      FTLCONF_LOCAL_IPV4: 192.168.1.225
      PIHOLE_DNS_: 1.1.1.1;1.0.0.1
      TZ: 'America/Vancouver'
      VIRTUAL_HOST: pihole.serverly.ca
      WEBPASSWORD: ''
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/pihole/pihole:/etc/pihole:rw
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/pihole/dnsmasq.d:/etc/dnsmasq.d:rw
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    networks:
      - proxy
    labels:
      # Specify the network Traefik should use for this service. Not all services require this label but Pi-hole does.
      # More info at https://stackoverflow.com/a/73159943
      - "traefik.docker.network=proxy" 
      - "traefik.enable=true" # Enable Traefik for this service
      - "traefik.http.routers.pihole-secure.entrypoints=websecure" # Assign the secure entrypoint for the router
      - "traefik.http.routers.pihole-secure.rule=Host(`pihole.serverly.ca`)" # Set the routing rule based on the hostname
      - "traefik.http.routers.pihole-secure.service=pihole" # Define the service for this router
      - "traefik.http.routers.pihole-secure.tls=true" # Enable TLS for the router
      - "traefik.http.services.pihole.loadbalancer.server.port=80" # Set the service's target port

networks: 
  proxy:
    external: true